// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id         String     @id @default(uuid())
    username   String     @unique
    email      String     @unique
    fullName   String
    password   String
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    profilePic String
    chatRooms  ChatRoom[] @relation("ChatRoomParticipants")
    messages   Message[]
    memberOf   Group[]    @relation(name: "GroupMembers")
    adminOf    Group[]    @relation(name: "GroupAdmin")
    superAdmin Group[]    @relation(name: "SuperAdmin")

    @@index([username, id])
}

model Message {
    id          String       @id @default(uuid())
    content     String
    contentType ContentType
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    senderId    String
    read        Boolean?     @default(false)
    chatRoomId  String
    sentBy      User         @relation(fields: [senderId], references: [id])
    chatRoom    ChatRoom     @relation(fields: [chatRoomId], references: [id])
    Attachment  Attachment[]

    @@index([chatRoomId, senderId])
}

model ChatRoom {
    id           String    @id @default(uuid())
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    messages     Message[]
    participants User[]    @relation(name: "ChatRoomParticipants")
    Group        Group[]
}

model Group {
    id               String   @id @default(uuid())
    name             String
    picture          String?
    createdAt        DateTime @default(now())
    pictureUpdatedAt DateTime @updatedAt
    nameUpdatedAt    DateTime @updatedAt
    members          User[]   @relation(name: "GroupMembers")
    superAdminId     String   @unique
    superAdmin       User     @relation(name: "SuperAdmin", fields: [superAdminId], references: [id])
    adminOf          User[]   @relation(name: "GroupAdmin")
    chatRoomId       String   @unique
    chatRoom         ChatRoom @relation(fields: [chatRoomId], references: [id])
}

model Attachment {
    id          String   @id @default(uuid())
    url         String
    contentType String
    size        Int
    createdAt   DateTime @default(now())
    messageId   String
    message     Message  @relation(fields: [messageId], references: [id])
}

enum ContentType {
    ATTACHMENT
    TEXT
}
